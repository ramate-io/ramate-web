/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetIpsIpAddress200Response {
    /// The IP address.
    #[serde(rename = "ip", deserialize_with = "Option::deserialize")]
    pub ip: Option<serde_json::Value>,
    /// The subusers that can send email using this IP address.
    #[serde(rename = "subusers", deserialize_with = "Option::deserialize")]
    pub subusers: Option<serde_json::Value>,
    /// The reverse DNS record for this IP address.
    #[serde(rename = "rdns", deserialize_with = "Option::deserialize")]
    pub rdns: Option<serde_json::Value>,
    /// The list of IP pools that this IP address belongs to.
    #[serde(rename = "pools", deserialize_with = "Option::deserialize")]
    pub pools: Option<serde_json::Value>,
    /// Indicates if this IP address is currently warming up.
    #[serde(rename = "warmup", deserialize_with = "Option::deserialize")]
    pub warmup: Option<serde_json::Value>,
    /// The date that the IP address was entered into warmup.
    #[serde(rename = "start_date", deserialize_with = "Option::deserialize")]
    pub start_date: Option<serde_json::Value>,
    /// Indicates if this IP address is associated with a reverse DNS record.
    #[serde(rename = "whitelabeled", deserialize_with = "Option::deserialize")]
    pub whitelabeled: Option<serde_json::Value>,
}

impl GetIpsIpAddress200Response {
    pub fn new(ip: Option<serde_json::Value>, subusers: Option<serde_json::Value>, rdns: Option<serde_json::Value>, pools: Option<serde_json::Value>, warmup: Option<serde_json::Value>, start_date: Option<serde_json::Value>, whitelabeled: Option<serde_json::Value>) -> GetIpsIpAddress200Response {
        GetIpsIpAddress200Response {
            ip,
            subusers,
            rdns,
            pools,
            warmup,
            start_date,
            whitelabeled,
        }
    }
}


