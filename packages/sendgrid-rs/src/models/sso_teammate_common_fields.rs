/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SsoTeammateCommonFields {
    /// The Teammate’s first name.
    #[serde(rename = "first_name", deserialize_with = "Option::deserialize")]
    pub first_name: Option<serde_json::Value>,
    /// The Teammate’s last name.
    #[serde(rename = "last_name", deserialize_with = "Option::deserialize")]
    pub last_name: Option<serde_json::Value>,
    /// The Teammate’s email address. This email address will also function as the Teammate’s username and must match the address assigned to the user in your IdP. This address cannot be changed after the Teammate is created.
    #[serde(rename = "email", deserialize_with = "Option::deserialize")]
    pub email: Option<serde_json::Value>,
    /// Indicates if the Teammate has admin permissions.
    #[serde(rename = "is_admin", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_admin: Option<Option<serde_json::Value>>,
    /// Indicates if the Teammate has read_only permissions.
    #[serde(rename = "is_read_only", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_read_only: Option<Option<serde_json::Value>>,
}

impl SsoTeammateCommonFields {
    pub fn new(first_name: Option<serde_json::Value>, last_name: Option<serde_json::Value>, email: Option<serde_json::Value>) -> SsoTeammateCommonFields {
        SsoTeammateCommonFields {
            first_name,
            last_name,
            email,
            is_admin: None,
            is_read_only: None,
        }
    }
}


