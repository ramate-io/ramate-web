/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GoogleAnalyticsSettings {
    /// Indicates if Google Analytics is enabled.
    #[serde(rename = "enabled", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<Option<serde_json::Value>>,
    /// The name of the campaign.
    #[serde(rename = "utm_campaign", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub utm_campaign: Option<Option<serde_json::Value>>,
    /// Used to differentiate ads
    #[serde(rename = "utm_content", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub utm_content: Option<Option<serde_json::Value>>,
    /// Name of the marketing medium (e.g. \"Email\").
    #[serde(rename = "utm_medium", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub utm_medium: Option<Option<serde_json::Value>>,
    /// Name of the referrer source. 
    #[serde(rename = "utm_source", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub utm_source: Option<Option<serde_json::Value>>,
    /// Any paid keywords.
    #[serde(rename = "utm_term", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub utm_term: Option<Option<serde_json::Value>>,
}

impl GoogleAnalyticsSettings {
    pub fn new() -> GoogleAnalyticsSettings {
        GoogleAnalyticsSettings {
            enabled: None,
            utm_campaign: None,
            utm_content: None,
            utm_medium: None,
            utm_source: None,
            utm_term: None,
        }
    }
}


