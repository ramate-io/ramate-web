/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetUserCredits200Response {
    /// The remaining number of credits available on your account.
    #[serde(rename = "remain", deserialize_with = "Option::deserialize")]
    pub remain: Option<serde_json::Value>,
    /// The total number of credits assigned to your account.
    #[serde(rename = "total", deserialize_with = "Option::deserialize")]
    pub total: Option<serde_json::Value>,
    /// The number of overdrawn credits for your account.
    #[serde(rename = "overage", deserialize_with = "Option::deserialize")]
    pub overage: Option<serde_json::Value>,
    /// The number of credits that you have used.
    #[serde(rename = "used", deserialize_with = "Option::deserialize")]
    pub used: Option<serde_json::Value>,
    /// The date that your credit balance was last reset.
    #[serde(rename = "last_reset", deserialize_with = "Option::deserialize")]
    pub last_reset: Option<serde_json::Value>,
    /// The next date that your credit balance will be reset.
    #[serde(rename = "next_reset", deserialize_with = "Option::deserialize")]
    pub next_reset: Option<serde_json::Value>,
    /// The frequency at which your credit balance will be reset.
    #[serde(rename = "reset_frequency", deserialize_with = "Option::deserialize")]
    pub reset_frequency: Option<serde_json::Value>,
}

impl GetUserCredits200Response {
    pub fn new(remain: Option<serde_json::Value>, total: Option<serde_json::Value>, overage: Option<serde_json::Value>, used: Option<serde_json::Value>, last_reset: Option<serde_json::Value>, next_reset: Option<serde_json::Value>, reset_frequency: Option<serde_json::Value>) -> GetUserCredits200Response {
        GetUserCredits200Response {
            remain,
            total,
            overage,
            used,
            last_reset,
            next_reset,
            reset_frequency,
        }
    }
}


