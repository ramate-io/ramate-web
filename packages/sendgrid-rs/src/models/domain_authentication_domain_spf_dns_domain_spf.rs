/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DomainAuthenticationDomainSpfDnsDomainSpf : The SPF record for the root domain.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DomainAuthenticationDomainSpfDnsDomainSpf {
    /// The root domain that this SPF record will be used to authenticate.
    #[serde(rename = "host", deserialize_with = "Option::deserialize")]
    pub host: Option<serde_json::Value>,
    /// The type of data in the SPF record.
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<serde_json::Value>,
    /// The SPF record.
    #[serde(rename = "data", deserialize_with = "Option::deserialize")]
    pub data: Option<serde_json::Value>,
    /// Indicates if the SPF record is valid.
    #[serde(rename = "valid", deserialize_with = "Option::deserialize")]
    pub valid: Option<serde_json::Value>,
}

impl DomainAuthenticationDomainSpfDnsDomainSpf {
    /// The SPF record for the root domain.
    pub fn new(host: Option<serde_json::Value>, r#type: Option<serde_json::Value>, data: Option<serde_json::Value>, valid: Option<serde_json::Value>) -> DomainAuthenticationDomainSpfDnsDomainSpf {
        DomainAuthenticationDomainSpfDnsDomainSpf {
            host,
            r#type,
            data,
            valid,
        }
    }
}


