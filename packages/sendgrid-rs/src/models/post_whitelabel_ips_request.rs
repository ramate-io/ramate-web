/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostWhitelabelIpsRequest {
    /// The IP address for which you want to set up reverse DNS.
    #[serde(rename = "ip", deserialize_with = "Option::deserialize")]
    pub ip: Option<serde_json::Value>,
    /// The subdomain that will be used to send emails from the IP address. This should be the same as the subdomain used to set up an authenticated domain.
    #[serde(rename = "subdomain", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub subdomain: Option<Option<serde_json::Value>>,
    /// The root, or sending, domain that will be used to send message from the IP address.
    #[serde(rename = "domain", deserialize_with = "Option::deserialize")]
    pub domain: Option<serde_json::Value>,
}

impl PostWhitelabelIpsRequest {
    pub fn new(ip: Option<serde_json::Value>, domain: Option<serde_json::Value>) -> PostWhitelabelIpsRequest {
        PostWhitelabelIpsRequest {
            ip,
            subdomain: None,
            domain,
        }
    }
}


