/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ParseSetting {
    /// The public URL where you would like SendGrid to POST the data parsed from your email. Any emails sent with the given hostname provided (whose MX records have been updated to point to SendGrid) will be parsed and POSTed to this URL.
    #[serde(rename = "url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub url: Option<Option<serde_json::Value>>,
    /// A specific and unique domain or subdomain that you have created to use exclusively to parse your incoming email. For example, `parse.yourdomain.com`.
    #[serde(rename = "hostname", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<Option<serde_json::Value>>,
    /// Indicates if you would like SendGrid to check the content parsed from your emails for spam before POSTing them to your domain.
    #[serde(rename = "spam_check", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub spam_check: Option<Option<serde_json::Value>>,
    /// Indicates if you would like SendGrid to post the original MIME-type content of your parsed email. When this parameter is set to `true`, SendGrid will send a JSON payload of the content of your email.
    #[serde(rename = "send_raw", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub send_raw: Option<Option<serde_json::Value>>,
}

impl ParseSetting {
    pub fn new() -> ParseSetting {
        ParseSetting {
            url: None,
            hostname: None,
            spam_check: None,
            send_raw: None,
        }
    }
}


