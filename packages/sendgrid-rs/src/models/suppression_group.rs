/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SuppressionGroup {
    /// The id of the suppression group.
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<serde_json::Value>,
    /// The name of the suppression group. Each group created by a user must have a unique name.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<serde_json::Value>,
    /// A description of the suppression group.
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<serde_json::Value>,
    #[serde(rename = "last_email_sent_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_email_sent_at: Option<Option<serde_json::Value>>,
    /// Indicates if this is the default suppression group.
    #[serde(rename = "is_default", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<Option<serde_json::Value>>,
    /// The unsubscribes associated with this group.
    #[serde(rename = "unsubscribes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub unsubscribes: Option<Option<serde_json::Value>>,
}

impl SuppressionGroup {
    pub fn new(id: Option<serde_json::Value>, name: Option<serde_json::Value>, description: Option<serde_json::Value>) -> SuppressionGroup {
        SuppressionGroup {
            id,
            name,
            description,
            last_email_sent_at: None,
            is_default: None,
            unsubscribes: None,
        }
    }
}


