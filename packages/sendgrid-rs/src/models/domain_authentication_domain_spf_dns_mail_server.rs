/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DomainAuthenticationDomainSpfDnsMailServer : Designates which mail server is responsible for accepting messages from a domain.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DomainAuthenticationDomainSpfDnsMailServer {
    /// The domain sending the messages.
    #[serde(rename = "host", deserialize_with = "Option::deserialize")]
    pub host: Option<serde_json::Value>,
    /// They type of DNS record.
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<serde_json::Value>,
    /// The mail server responsible for accepting messages from the sending domain.
    #[serde(rename = "data", deserialize_with = "Option::deserialize")]
    pub data: Option<serde_json::Value>,
    /// Indicates if this is a valid DNS record.
    #[serde(rename = "valid", deserialize_with = "Option::deserialize")]
    pub valid: Option<serde_json::Value>,
}

impl DomainAuthenticationDomainSpfDnsMailServer {
    /// Designates which mail server is responsible for accepting messages from a domain.
    pub fn new(host: Option<serde_json::Value>, r#type: Option<serde_json::Value>, data: Option<serde_json::Value>, valid: Option<serde_json::Value>) -> DomainAuthenticationDomainSpfDnsMailServer {
        DomainAuthenticationDomainSpfDnsMailServer {
            host,
            r#type,
            data,
            valid,
        }
    }
}


