/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContactResponse {
    /// ID assigned to a contact when added to the system.
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<serde_json::Value>,
    /// Email of the contact. This is a reserved field.
    #[serde(rename = "email", deserialize_with = "Option::deserialize")]
    pub email: Option<serde_json::Value>,
    /// Alternate emails of the contact. This is a reserved field.
    #[serde(rename = "alternate_emails", deserialize_with = "Option::deserialize")]
    pub alternate_emails: Option<serde_json::Value>,
    /// First name of the contact. This is a reserved field.
    #[serde(rename = "first_name", deserialize_with = "Option::deserialize")]
    pub first_name: Option<serde_json::Value>,
    /// Last name of the contact. This is a reserved field.
    #[serde(rename = "last_name", deserialize_with = "Option::deserialize")]
    pub last_name: Option<serde_json::Value>,
    /// First line of address of the contact. This is a reserved field.
    #[serde(rename = "address_line_1", deserialize_with = "Option::deserialize")]
    pub address_line_1: Option<serde_json::Value>,
    /// Second line of address of the contact. This is a reserved field.
    #[serde(rename = "address_line_2", deserialize_with = "Option::deserialize")]
    pub address_line_2: Option<serde_json::Value>,
    /// City associated with the contact. This is a reserved field.
    #[serde(rename = "city", deserialize_with = "Option::deserialize")]
    pub city: Option<serde_json::Value>,
    /// State associated with the contact. This is a reserved field.
    #[serde(rename = "state_province_region", deserialize_with = "Option::deserialize")]
    pub state_province_region: Option<serde_json::Value>,
    /// Zipcode associated with the address of the contact. This is a reserved field.
    #[serde(rename = "postal_code", deserialize_with = "Option::deserialize")]
    pub postal_code: Option<serde_json::Value>,
    /// Country associated with the address of the contact. This is a reserved field.
    #[serde(rename = "country", deserialize_with = "Option::deserialize")]
    pub country: Option<serde_json::Value>,
    /// IDs of all lists the contact is part of
    #[serde(rename = "list_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub list_ids: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields")]
    pub custom_fields: Box<crate::models::ContactResponseCustomFields>,
    /// IDs of all segments the contact is part of
    #[serde(rename = "segment_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub segment_ids: Option<Option<serde_json::Value>>,
}

impl ContactResponse {
    pub fn new(id: Option<serde_json::Value>, email: Option<serde_json::Value>, alternate_emails: Option<serde_json::Value>, first_name: Option<serde_json::Value>, last_name: Option<serde_json::Value>, address_line_1: Option<serde_json::Value>, address_line_2: Option<serde_json::Value>, city: Option<serde_json::Value>, state_province_region: Option<serde_json::Value>, postal_code: Option<serde_json::Value>, country: Option<serde_json::Value>, custom_fields: crate::models::ContactResponseCustomFields) -> ContactResponse {
        ContactResponse {
            id,
            email,
            alternate_emails,
            first_name,
            last_name,
            address_line_1,
            address_line_2,
            city,
            state_province_region,
            postal_code,
            country,
            list_ids: None,
            custom_fields: Box::new(custom_fields),
            segment_ids: None,
        }
    }
}


