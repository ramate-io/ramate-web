/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostMarketingTestSendEmailRequest {
    /// The ID of the template that you would like to use. If you use a template that contains a subject and content (either text or HTML), then those values specified at the personalizations or message level will not be used.
    #[serde(rename = "template_id", deserialize_with = "Option::deserialize")]
    pub template_id: Option<serde_json::Value>,
    ///  You can override the active template with an alternative template version by passing the version ID in this field. If this field is blank, the active template version will be used.
    #[serde(rename = "version_id_override", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub version_id_override: Option<Option<serde_json::Value>>,
    /// This ID must belong to a verified sender. Alternatively, you may supply a `from_address` email.
    #[serde(rename = "sender_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sender_id: Option<Option<serde_json::Value>>,
    /// A custom unsubscribe URL.
    #[serde(rename = "custom_unsubscribe_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_unsubscribe_url: Option<Option<serde_json::Value>>,
    #[serde(rename = "suppression_group_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub suppression_group_id: Option<Option<serde_json::Value>>,
    /// An array of email addresses you want to send the test message to.
    #[serde(rename = "emails", deserialize_with = "Option::deserialize")]
    pub emails: Option<serde_json::Value>,
    /// You can either specify this address or specify a verified sender ID.
    #[serde(rename = "from_address", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub from_address: Option<Option<serde_json::Value>>,
}

impl PostMarketingTestSendEmailRequest {
    pub fn new(template_id: Option<serde_json::Value>, emails: Option<serde_json::Value>) -> PostMarketingTestSendEmailRequest {
        PostMarketingTestSendEmailRequest {
            template_id,
            version_id_override: None,
            sender_id: None,
            custom_unsubscribe_url: None,
            suppression_group_id: None,
            emails,
            from_address: None,
        }
    }
}


