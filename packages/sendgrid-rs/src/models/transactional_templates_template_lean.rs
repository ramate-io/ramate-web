/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransactionalTemplatesTemplateLean {
    /// The ID of the transactional template.
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<serde_json::Value>,
    /// The name for the transactional template.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<serde_json::Value>,
    /// Defines the generation of the template.
    #[serde(rename = "generation", deserialize_with = "Option::deserialize")]
    pub generation: Option<Generation>,
    /// The date and time that this transactional template version was updated.
    #[serde(rename = "updated_at ", deserialize_with = "Option::deserialize")]
    pub updated_at_: Option<serde_json::Value>,
    /// The different versions of this transactional template.
    #[serde(rename = "versions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub versions: Option<Option<serde_json::Value>>,
}

impl TransactionalTemplatesTemplateLean {
    pub fn new(id: Option<serde_json::Value>, name: Option<serde_json::Value>, generation: Option<Generation>, updated_at_: Option<serde_json::Value>) -> TransactionalTemplatesTemplateLean {
        TransactionalTemplatesTemplateLean {
            id,
            name,
            generation,
            updated_at_,
            versions: None,
        }
    }
}

/// Defines the generation of the template.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Generation {
    #[serde(rename = "legacy")]
    Legacy,
    #[serde(rename = "dynamic")]
    Dynamic,
}

impl Default for Generation {
    fn default() -> Generation {
        Self::Legacy
    }
}

