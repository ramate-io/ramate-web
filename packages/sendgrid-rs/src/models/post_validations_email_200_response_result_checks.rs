/*
 * Email Activity (beta)
 *
 * The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data. The Beta endpoints for the new Email Activity APIs - functionality is subject to change without notice. You may not have access to this Beta endpoint.  Email Activity offers filtering and search by event type for two days worth of data. There is an optional add-on to store 60 days worth of data. This add-on also gives you access to the ability to download a CSV of the 60 days worth of email event data.
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PostValidationsEmail200ResponseResultChecks : Granular checks for email address validity.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostValidationsEmail200ResponseResultChecks {
    #[serde(rename = "domain")]
    pub domain: Box<crate::models::PostValidationsEmail200ResponseResultChecksDomain>,
    #[serde(rename = "local_part")]
    pub local_part: Box<crate::models::PostValidationsEmail200ResponseResultChecksLocalPart>,
    #[serde(rename = "additional")]
    pub additional: Box<crate::models::PostValidationsEmail200ResponseResultChecksAdditional>,
}

impl PostValidationsEmail200ResponseResultChecks {
    /// Granular checks for email address validity.
    pub fn new(domain: crate::models::PostValidationsEmail200ResponseResultChecksDomain, local_part: crate::models::PostValidationsEmail200ResponseResultChecksLocalPart, additional: crate::models::PostValidationsEmail200ResponseResultChecksAdditional) -> PostValidationsEmail200ResponseResultChecks {
        PostValidationsEmail200ResponseResultChecks {
            domain: Box::new(domain),
            local_part: Box::new(local_part),
            additional: Box::new(additional),
        }
    }
}


